Mateusz Dudzinski
Latte Compiler MRJP 2020Z

Frontend:
  All extensions except inheritance are already implemented. The 'extends' is
  allowed but is ignored so far. Errors are displayed in gcc-compatible format:
  "./filename:line_number: error: what" (without column number, because BNFC
  makes in extraordinarily hard to implement in C).

Compilation:
  Project is build exclusively by running 'make'. The project is compiled using
  gcc, but will work with any compliant C99 (or higher) compiler (I've tested
  with like 4 of them). All BNFC/Bison/Flex files are already generated, but
  user can regenerate them using 'make grammar' and they should work just fine.

Libraries:
  There are two single-file header only libraries used in the project;
  * array.h - simple expandable array for C (like std::vector for C++)
  * hashmap.h - my old hacky version of the Robin-Hood hash table
  Both libraries are _heavily_ inspired by: github.com/nothings/stb , but
  written by me, a long time ago. Also hashmap is using a murmur3 - a public
  domain hash by Austin Appleby slightly adjusted to work in plain C. Original
  implementation can be found on: github.com/aappleby/smhasher .

  Except that, the only thing the project relies on is a C99 standard library.

Catalogues:
  Source code (bnfc files included) is in 'src' directory, object files are
  compiled into 'obj'.
